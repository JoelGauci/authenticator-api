swagger: '2.0'
info:
  version: 1.0.0
  title: mfa
  description: multi-factor API
basePath: /v1/mfa
schemes:
  - https
host: emea-poc8-test.apigee.net
consumes:
  - application/json
produces:
  - application/json
securityDefinitions:
  clientIdHeader:
    type: apiKey
    in: header
    name: X-IBM-Client-Id
  clientSecretHeader:
    in: header
    name: X-IBM-Client-Secret
    type: apiKey
security:
  - clientIdHeader: []
    clientSecretHeader: []

paths:
  /authenticators:
    post:
      tags:
        - MFACode
      summary: Create a new instance of the model and persist it into the data source.
      operationId: MFACode.create
      parameters:
        - name: data
          in: body
          description: Model instance data
          required: false
          schema:
            description: Model instance data
            $ref: '#/definitions/MFACode'
      responses:
        '200':
          description: Request was successful
          schema:
            $ref: '#/definitions/MFACode'
      deprecated: false
    patch:
      tags:
        - MFACode
      summary: >-
        Patch an existing model instance or insert a new one into the data
        source.
      operationId: MFACode.patchOrCreate
      parameters:
        - name: data
          in: body
          description: Model instance data
          required: false
          schema:
            description: Model instance data
            $ref: '#/definitions/MFACode'
      responses:
        '200':
          description: Request was successful
          schema:
            $ref: '#/definitions/MFACode'
      deprecated: false
    put:
      tags:
        - MFACode
      summary: >-
        Replace an existing model instance or insert a new one into the data
        source.
      operationId: MFACode.replaceOrCreate__put_authenticators
      parameters:
        - name: data
          in: body
          description: Model instance data
          required: false
          schema:
            description: Model instance data
            $ref: '#/definitions/MFACode'
      responses:
        '200':
          description: Request was successful
          schema:
            $ref: '#/definitions/MFACode'
      deprecated: false
    get:
      tags:
        - MFACode
      summary: Find all instances of the model matched by filter from the data source.
      operationId: MFACode.find
      parameters:
        - name: filter
          in: query
          description: >-
            Filter defining fields, where, include, order, offset, and limit -
            must be a JSON-encoded string ({"something":"value"})
          required: false
          type: string
          format: JSON
      responses:
        '200':
          description: Request was successful
          schema:
            type: array
            items:
              $ref: '#/definitions/MFACode'
      deprecated: false
  /authenticators/replaceOrCreate:
    post:
      tags:
        - MFACode
      summary: >-
        Replace an existing model instance or insert a new one into the data
        source.
      operationId: MFACode.replaceOrCreate__post_authenticators_replaceOrCreate
      parameters:
        - name: data
          in: body
          description: Model instance data
          required: false
          schema:
            description: Model instance data
            $ref: '#/definitions/MFACode'
      responses:
        '200':
          description: Request was successful
          schema:
            $ref: '#/definitions/MFACode'
      deprecated: false
  /authenticators/upsertWithWhere:
    post:
      tags:
        - MFACode
      summary: >-
        Update an existing model instance or insert a new one into the data
        source based on the where criteria.
      operationId: MFACode.upsertWithWhere
      parameters:
        - name: where
          in: query
          description: Criteria to match model instances
          required: false
          type: string
          format: JSON
        - name: data
          in: body
          description: An object of model property name/value pairs
          required: false
          schema:
            description: An object of model property name/value pairs
            $ref: '#/definitions/MFACode'
      responses:
        '200':
          description: Request was successful
          schema:
            $ref: '#/definitions/MFACode'
      deprecated: false
  '/authenticators/{id}/exists':
    get:
      tags:
        - MFACode
      summary: Check whether a model instance exists in the data source.
      operationId: 'MFACode.exists__get_authenticators_{id}_exists'
      parameters:
        - name: id
          in: path
          description: Model id
          required: true
          type: string
          format: JSON
      responses:
        '200':
          description: Request was successful
          schema:
            type: object
            properties:
              exists:
                type: boolean
      deprecated: false
  '/authenticators/{id}':
    head:
      tags:
        - MFACode
      summary: Check whether a model instance exists in the data source.
      operationId: 'MFACode.exists__head_authenticators_{id}'
      parameters:
        - name: id
          in: path
          description: Model id
          required: true
          type: string
          format: JSON
      responses:
        '200':
          description: Request was successful
          schema:
            type: object
            properties:
              exists:
                type: boolean
      deprecated: false
    get:
      tags:
        - MFACode
      summary: 'Find a model instance by {{id}} from the data source.'
      operationId: MFACode.findById
      parameters:
        - name: id
          in: path
          description: Model id
          required: true
          type: string
          format: JSON
        - name: filter
          in: query
          description: >-
            Filter defining fields and include - must be a JSON-encoded string
            ({"something":"value"})
          required: false
          type: string
          format: JSON
      responses:
        '200':
          description: Request was successful
          schema:
            $ref: '#/definitions/MFACode'
      deprecated: false
    put:
      tags:
        - MFACode
      summary: >-
        Replace attributes for a model instance and persist it into the data
        source.
      operationId: 'MFACode.replaceById__put_authenticators_{id}'
      parameters:
        - name: id
          in: path
          description: Model id
          required: true
          type: string
          format: JSON
        - name: data
          in: body
          description: Model instance data
          required: false
          schema:
            description: Model instance data
            $ref: '#/definitions/MFACode'
      responses:
        '200':
          description: Request was successful
          schema:
            $ref: '#/definitions/MFACode'
      deprecated: false
    delete:
      tags:
        - MFACode
      summary: 'Delete a model instance by {{id}} from the data source.'
      operationId: MFACode.deleteById
      parameters:
        - name: id
          in: path
          description: Model id
          required: true
          type: string
          format: JSON
      responses:
        '200':
          description: Request was successful
          schema:
            type: object
      deprecated: false
    patch:
      tags:
        - MFACode
      summary: >-
        Patch attributes for a model instance and persist it into the data
        source.
      operationId: MFACode.prototype.patchAttributes
      parameters:
        - name: data
          in: body
          description: An object of model property name/value pairs
          required: false
          schema:
            description: An object of model property name/value pairs
            $ref: '#/definitions/MFACode'
        - name: id
          in: path
          description: MFACode id
          required: true
          type: string
          format: JSON
      responses:
        '200':
          description: Request was successful
          schema:
            $ref: '#/definitions/MFACode'
      deprecated: false
  '/authenticators/{id}/replace':
    post:
      tags:
        - MFACode
      summary: >-
        Replace attributes for a model instance and persist it into the data
        source.
      operationId: 'MFACode.replaceById__post_authenticators_{id}_replace'
      parameters:
        - name: id
          in: path
          description: Model id
          required: true
          type: string
          format: JSON
        - name: data
          in: body
          description: Model instance data
          required: false
          schema:
            description: Model instance data
            $ref: '#/definitions/MFACode'
      responses:
        '200':
          description: Request was successful
          schema:
            $ref: '#/definitions/MFACode'
      deprecated: false
  /authenticators/findOne:
    get:
      tags:
        - MFACode
      summary: Find first instance of the model matched by filter from the data source.
      operationId: MFACode.findOne
      parameters:
        - name: filter
          in: query
          description: >-
            Filter defining fields, where, include, order, offset, and limit -
            must be a JSON-encoded string ({"something":"value"})
          required: false
          type: string
          format: JSON
      responses:
        '200':
          description: Request was successful
          schema:
            $ref: '#/definitions/MFACode'
      deprecated: false
  /authenticators/update:
    post:
      tags:
        - MFACode
      summary: 'Update instances of the model matched by {{where}} from the data source.'
      operationId: MFACode.updateAll
      parameters:
        - name: where
          in: query
          description: Criteria to match model instances
          required: false
          type: string
          format: JSON
        - name: data
          in: body
          description: An object of model property name/value pairs
          required: false
          schema:
            description: An object of model property name/value pairs
            $ref: '#/definitions/MFACode'
      responses:
        '200':
          description: Request was successful
          schema:
            description: Information related to the outcome of the operation
            type: object
            properties:
              count:
                description: The number of instances updated
                type: number
                format: double
      deprecated: false
  /authenticators/count:
    get:
      tags:
        - MFACode
      summary: Count instances of the model matched by where from the data source.
      operationId: MFACode.count
      parameters:
        - name: where
          in: query
          description: Criteria to match model instances
          required: false
          type: string
          format: JSON
      responses:
        '200':
          description: Request was successful
          schema:
            type: object
            properties:
              count:
                type: number
                format: double
      deprecated: false
  '/authenticators/{id}/code':
    get:
      tags:
        - MFACode
      summary: generate a 6 digit code
      operationId: MFACode.generateCode
      parameters:
        - name: id
          in: path
          description: issuer identifier
          required: true
          type: string
      responses:
        '200':
          description: Request was successful
          schema:
            description: 6 digit code
            type: object
      deprecated: false
  '/authenticators/{id}/code/{code}':
    get:
      tags:
        - MFACode
      summary: verify a 6 digit code
      operationId: MFACode.verifyCode
      parameters:
        - name: id
          in: path
          description: issuer identifier
          required: true
          type: string
        - name: code
          in: path
          description: 6 digit code to be verified
          required: true
          type: string
      responses:
        '200':
          description: Request was successful
          schema:
            description: status code for the code verification
            type: object
      deprecated: false
  
definitions:
  MFACode:
    properties:
      account:
        type: string
      issuer:
        type: string
    required:
      - account
      - issuer
    additionalProperties: false
  x-any:
    properties: {}
